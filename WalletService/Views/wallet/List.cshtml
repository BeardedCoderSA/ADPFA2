@model IEnumerable<WalletService.Database.Models.TransactionRecords>

@{
    ViewData["Title"] = "List";
}
@{
    decimal totBTC = 0;
    decimal totETH = 0;
    decimal totCar = 0;
}
<style>
    table.minimalistBlack {
  border: 3px solid #000000;
  width: 100%;
  text-align: left;
  border-collapse: collapse;
}
table.minimalistBlack td, table.minimalistBlack th {
  border: 1px solid #000000;
  padding: 5px 4px;
}
table.minimalistBlack tbody td {
  font-size: 13px;
}
table.minimalistBlack thead {
  background: #CFCFCF;
  background: -moz-linear-gradient(top, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);
  background: -webkit-linear-gradient(top, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);
  background: linear-gradient(to bottom, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);
  border-bottom: 3px solid #000000;
}
table.minimalistBlack thead th {
  font-size: 15px;
  font-weight: bold;
  color: #000000;
  text-align: left;
}
table.minimalistBlack tfoot {
  font-size: 14px;
  font-weight: bold;
  color: #000000;
  border-top: 3px solid #000000;
}
table.minimalistBlack tfoot td {
  font-size: 14px;
}
</style>
<h1>WALLET</h1>
<h1>Bitcoin</h1>
<table class="minimalistBlack">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Transaction_Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qty)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        @if(item.Symbol == ".XBT")
            {
                <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Transaction_Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Qty)
            </td>
                </tr>
                totBTC += item.Qty;
            }
}
    </tbody>
    <td></td>
    <td>Total</td>
    <td>@totBTC</td>

</table>
<br /><br />
<h1>Ethereum</h1>
<table class="minimalistBlack">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Transaction_Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qty)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        @if(item.Symbol == ".BETH")
            {
                <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Transaction_Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Qty)
            </td>
                </tr>
                totETH += item.Qty;
            }
}
    </tbody>
    <td></td>
    <td>Total</td>
    <td>@totETH</td>
    </table>
    <br /><br />
    <h1>Cardano</h1>
<table class="minimalistBlack">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Transaction_Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qty)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        @if(item.Symbol == ".BADAT")
            {
                <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Transaction_Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Qty)
            </td>
                </tr>
                totCar += item.Qty;
            }
}
    </tbody>
    <td></td>
    <td>Total</td>
    <td>@totCar</td>
</table>
